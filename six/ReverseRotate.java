package codewars.six;

import static org.junit.Assert.assertEquals;

import java.util.Arrays;

import org.junit.Test;

/*
 * The input is a string str of digits. Cut the string into chunks (a chunk here is a substring of the initial string) of size sz (ignore the last chunk if its size is less than sz).
 * 
 * If the sum of a chunk's digits is divisible by 2, reverse that chunk; otherwise rotate it to the left by one position. Put together these modified chunks and return the result as a string.
 * 
 * If
 * 
 * sz is <= 0 or if str == "" return ""
 * sz is greater (>) than the length of str it is impossible to take a chunk of size sz hence return "".
 * Examples:
 * ("123456987654", 6) --> "234561876549"
 * ("123456987653", 6) --> "234561356789"
 * ("66443875", 4) --> "44668753"
 * ("66443875", 8) --> "64438756"
 * ("664438769", 8) --> "67834466"
 * ("123456779", 8) --> "23456771"
 * ("", 8) --> ""
 * ("123456779", 0) --> "" 
 * ("563000655734469485", 4) --> "0365065073456944"
 * Example of a string rotated to the left by one position:
 * s = "123456" gives "234561".
 * 
 */

public class ReverseRotate {

    public static String revRot(String strng, int sz) {
        if ("".equals(strng) || sz > strng.length() || sz == 0) {
        	return "";
        }

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i <= strng.length() - sz; i+=sz) {
        	sb.append(revRot(strng.substring(i, sz + i)));
        }
        return sb.toString();
    }
    
    private static String revRot(String str) {
    	int sum = Arrays.stream(str.split("")).mapToInt(Integer::parseInt).sum();
    	if (sum % 2 == 0) {
    		return new StringBuilder(str).reverse().toString();
    	} else {
    		return str.substring(1) + str.charAt(0);
    	}
    }
    
    private static void testing(String actual, String expected) {
        assertEquals(expected, actual);
    }
    @Test
    public void test1() {
        testing(revRot("1234", 0), "");
        testing(revRot("", 0), "");
        testing(revRot("1234", 5), "");
        String s = "733049910872815764";
        testing(revRot(s, 5), "330479108928157");
        s = "716923099002312357185789070636600677609798901210371264497840938752541964688577496995575035210145914342329947142721219226752321972530877524682424061133161618517400545946844720789462233194814716221253646855223801765055494313617746400498152643486530450637145958423411535370401133618477292525942534829171282927501368822610242616267233437746964830508852305977742149937643490262166485979488782928863023416074362902760290945546108660462297372431663971056974402396706806443681826852053904355276273139523026315684305602680465240877448408123440485381291724446256518699318285488858231113532423322351603352727115631874989804447899611333729979788436411968516536169975896926608556289121348539581989888534287597654968474223794117487579475510893574562907090760246756128252483265105372216275144785578812894637128852746629079774715288354228744253637363164649160448779778635277945161333599185453396511990062170826799869259423670586446841650413640055141440657446823459543239450450624981541439625202966523196567508577164412366332306949038363054313098444748608377078946802552374792984774447292964025769993772394503396168368836364374440327127227619237033220468789789067978769057918141948333453081041693731646173334169885582813229439145374312639273405974959322539963393769421336705455212262297248930427527728878140811871111925040661876869298652956601922130664358297054601171209457548997952268961716997534602425005380837542345079253394049842131122637612232569003653714871784156697415583485168832189980335497528703295116188927751795307913218330029674670214508856239341633240871633873897618927507932912287386109788241604543717937072966284473876438421911982973707593397683933171786883706355538014485597313706655572256449189022106763589722025609936418548970085310694176224688291844865293667325368071416142182977019354220847019569318937152654435310134832210970118426781843550978719400412580119793423271085994566286261804763151978656036701286432631257121919400821136722866879118294479817647399395669952317050280350149696275398452023380078931034769057961987019498658126532944770969719897300968857863500268254320411008817242313829565267728826837775563178036449933736154687454879408879781933739101014232573088395675146634308796874716470115657809217777504172948716601608674357978750653776015082519624639479788361932296759193345768484036555512512423977127776185082707106183595403541823068884012813876205152232372529362337265619037880167412364626663302253048851124990589638637290286109759533656310004355807894261024034185304169782816583902638738333262490327898174572660940150648326834884006174557020329396394638694765431628676317422084022021064576536143875364167742163126242755838994185329404795650613289576921652836759104232537142639942391482845860127540307095984797520648895478255635494965829192527399303027508765692298581130539528128511447";
        String expected = "1692309900231235718578907063660067760979890121037126449784093875254196468857749699557503521014591434232994714272121922675232197253087752468242406113316161851740054594684472078946223319481471622125364785522380176505549431361774640049815264348653045063714595842341153537040113361847729252594253482917128292750136882261024261626723343774696483050885230597774214993764349026216648597948878292886302341606436290276029094554610866046229737243166397105697440239670680644368182685205390435527627313952302631568430560268046524087744840812344048538129172444625651869931828548885823111353242332235160335272711574725882173649821887558744157261227350156238425282165764206709070926547539801557497578471149732247486945679578243588898918593584312198265580662969857996163561586911463488797992733311699874440898947813662907977471528835422874425363736316464916044877977863527794516133359918545339651199006217082679986925942367058644684165041364005514144065744682345954323945045062498154143962520296652319656750857716446236633230694903836305431309844474860837707894680255237479298477444729296402576999377239450339616836883636437444032712722761923703322046878978906797876905791814194833345308104169373164617333416988558214324573808350052420643579961716986225979984575490217110645079285346603122910665925689296867816604052911117811804187882772572403984279226221255450763312496739336993522395947950437293621347354193492231897173454061428879016837822192397057298167983783361780423361439326588054120764769200338123197035971577298816115923078257945330899812388615843855147966514871784173563009652322167362211312489404933529705965910748022453910779281241614170863523766392568448192886422671496013580079845814639906520227985367601220981944652275556607313795584410835553607388687171339386793395707379289119124834678374482669270732025489357269694105308205071325996659399374671897449281197866822763112800491912175213623468210763065687915136740816268266549958017232439791108521400491787905534818762481107901223843101353445625173981346174786978034366415765938803752324101019373391879788049784547864516373399446308713655777386288277625659283132427188001140234528620053687588690037989179690774492356218568949107891697509674301398700833761088730916562733263925273232251502678318210488860328145304595381601707280581677721779324215215555630484867543391957692239163887974936426915280510677356057879753476806106617849271405777712908756511071236462666330225304885112499058963863729028610975953365631000435580789426102403418530416978281658390263873833326249032789817457266094015064832683488400617455702032939639463869476543162867631742208402402106457653614387536416774216312624275583899418532940479565061328957692165283675910423253714263994239148284586012754030709598479752064889547825563549496582919252739930302750876569229858113053952812852";
        String actual = revRot(s, 200);
        testing(actual, expected);
    }
}
